/*
 * Messages_IW.java
 *
 * Created on 27 agosto 2008, 16.19
 */

package it.unitn.LODE.gui;

import it.unitn.LODE.MP.constants.LODEConstants;
import it.unitn.LODE.utils.Messanger;
import java.awt.Color;
import javax.swing.text.BadLocationException;
import javax.swing.text.Document;
import javax.swing.text.Style;
import javax.swing.text.StyleConstants;
import javax.swing.text.html.HTMLDocument;

/**
 *
 * @author  ronchet
 */
public class Messages_IW extends javax.swing.JPanel {

    /** Creates new form Messages_IW */
    Document logDoc;
    Document msgDoc;

    Style errorStyle;
    Style warningStyle;
    Style suggestionStyle;
    Style logStyle;
    Style genericStyle;
    Style debugStyle;
    Color suggestionColor[]={new Color(255,255,180),new Color(226,226,64),Color.YELLOW};
    Color suggestionPen[]={new Color(0,0,128),new Color(0,128,0)};
    int currentSuggestionColorIndex=0;
    int currentSuggestionPenIndex=0;
    public Messages_IW() {
        initComponents();
        logTextPane.setEditable(false);
        logDoc = logTextPane.getDocument();
        msgTextPane.setEditable(false);
        msgDoc = msgTextPane.getDocument();
        /* Styles */
        genericStyle = logTextPane.addStyle("Generic", null);
        StyleConstants.setForeground(genericStyle, Color.BLACK);
        errorStyle = logTextPane.addStyle("Error", null);
        StyleConstants.setForeground(errorStyle, Color.RED);
        StyleConstants.setBold(errorStyle, true);
        warningStyle = logTextPane.addStyle("Warning", null);
        StyleConstants.setForeground(warningStyle, Color.ORANGE);
        suggestionStyle = logTextPane.addStyle("Suggestion", null);
        StyleConstants.setForeground(suggestionStyle, Color.BLUE);
        StyleConstants.setBold(suggestionStyle, true);
        StyleConstants.setAlignment(suggestionStyle, StyleConstants.ALIGN_CENTER);
        logStyle = logTextPane.addStyle("Log", null);
        StyleConstants.setForeground(logStyle, Color.DARK_GRAY);
        debugStyle = logTextPane.addStyle("Debug", null);
        StyleConstants.setForeground(debugStyle, Color.GREEN);
        StyleConstants.setItalic(debugStyle, true);
    }
    
    public void writeMessage(String s){
        try {
            logDoc.insertString(logDoc.getLength(), s+"\n", genericStyle);
        } catch (BadLocationException ex) {
            Messanger m=Messanger.getInstance();
            ex.printStackTrace(m.getLogger());
            m.w("Error while writing on the message board "+s,LODEConstants.MSG_ERROR);
        }
    }
    public void writeMessage(String s,int c){
        try {
            switch (c) {
               case LODEConstants.MSG_ERROR:
                     logDoc.insertString(logDoc.getLength(), s+"\n", errorStyle); break;
                case LODEConstants.MSG_WARNING:
                     logDoc.insertString(logDoc.getLength(), s+"\n", warningStyle); break;
                case LODEConstants.MSG_SUGGESTION:
                     msgDoc.remove(0,msgDoc.getLength());
                     msgTextPane.setBackground(suggestionColor[++currentSuggestionColorIndex%suggestionColor.length]);
                     StyleConstants.setForeground(suggestionStyle, 
                             suggestionPen[++currentSuggestionPenIndex%suggestionPen.length]);
                     //StyleConstants.setBackground(suggestionStyle, 
                     //        suggestionColor[++currentSuggestionColorIndex%suggestionColor.length]);
                     msgDoc.insertString(msgDoc.getLength(), "   "+s, suggestionStyle); break;
                case LODEConstants.MSG_LOG:
                     logDoc.insertString(logDoc.getLength(), s+"\n", logStyle); break;
                case LODEConstants.MSG_GENERIC:
                     logDoc.insertString(logDoc.getLength(), s+"\n", genericStyle); break;
                case LODEConstants.MSG_DEBUG:
                     logDoc.insertString(logDoc.getLength(), s+"\n", debugStyle); break;
            }
        } catch (BadLocationException ex) {
            Messanger m=Messanger.getInstance();
            ex.printStackTrace(m.getLogger());
            m.w("Error while writing on the message board "+s,LODEConstants.MSG_ERROR);
        }
        logTextPane.setCaretPosition(logDoc.getLength());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        logScrollPane = new javax.swing.JScrollPane();
        logTextPane = new javax.swing.JTextPane();
        msgScrollPane = new javax.swing.JScrollPane();
        msgTextPane = new javax.swing.JTextPane();

        logScrollPane.setName("logScrollPane"); // NOI18N

        logTextPane.setName("logTextPane"); // NOI18N
        logScrollPane.setViewportView(logTextPane);

        msgScrollPane.setName("msgScrollPane"); // NOI18N

        msgTextPane.setName("msgTextPane"); // NOI18N
        msgScrollPane.setViewportView(msgTextPane);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, msgScrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 294, Short.MAX_VALUE)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, logScrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 294, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(msgScrollPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 56, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(logScrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane logScrollPane;
    private javax.swing.JTextPane logTextPane;
    private javax.swing.JScrollPane msgScrollPane;
    private javax.swing.JTextPane msgTextPane;
    // End of variables declaration//GEN-END:variables
    
    class Messages extends HTMLDocument{
        
    }
}
