/*
 * LecturePane_IW.java
 *
 * Created on 10 agosto 2008, 9.26
 */

package it.unitn.LODE.gui;

import it.unitn.LODE.Models.Lecture;
import it.unitn.LODE.Models.ProgramState;
import java.io.File;
import java.text.SimpleDateFormat;
import java.util.Date;

/**
 *
 * @author  ronchet
 */
public class LecturePane_IW extends javax.swing.JPanel {

    /** Creates new form LecturePane_IW */
    public LecturePane_IW() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLabel = new javax.swing.JLabel();
        dateLabel = new javax.swing.JLabel();
        speakerLabel = new javax.swing.JLabel();
        titleValueLabel = new javax.swing.JLabel();
        dateValueLabel = new javax.swing.JLabel();
        speakerValueLabel = new javax.swing.JLabel();
        headerLabel = new javax.swing.JLabel();
        hasVideoCheckBox = new javax.swing.JCheckBox();
        hasPostProcessingCheckBox = new javax.swing.JCheckBox();
        nameValueLabel = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        hasSlidesCheckBox = new javax.swing.JCheckBox();
        hasiPhonePostProcessingCheckBox = new javax.swing.JCheckBox();

        setEnabled(false);
        setPreferredSize(new java.awt.Dimension(235, 250));
        setRequestFocusEnabled(false);

        titleLabel.setText("Title: ");
        titleLabel.setName("titleLabel"); // NOI18N

        dateLabel.setText("Date:");
        dateLabel.setName("DateLabel"); // NOI18N

        speakerLabel.setText("Speaker(s):");
        speakerLabel.setName("speakerLabel"); // NOI18N
        speakerLabel.setPreferredSize(new java.awt.Dimension(64, 16));

        titleValueLabel.setForeground(new java.awt.Color(0, 0, 255));
        titleValueLabel.setText("<html><i><font color=\"red\">Lecture not defined</html>"); // NOI18N
        titleValueLabel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, null, java.awt.Color.white, null, null));
        titleValueLabel.setName("nameValue"); // NOI18N

        dateValueLabel.setForeground(new java.awt.Color(0, 0, 255));
        dateValueLabel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        dateValueLabel.setName("dateValue"); // NOI18N

        speakerValueLabel.setForeground(new java.awt.Color(0, 0, 255));
        speakerValueLabel.setText("...");
        speakerValueLabel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        speakerValueLabel.setName("speakerValue"); // NOI18N

        headerLabel.setFont(new java.awt.Font("Lucida Grande", 0, 18));
        headerLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        headerLabel.setText("CURRENT LECTURE");
        headerLabel.setName("headerLabel"); // NOI18N

        hasVideoCheckBox.setText("has recording");
        hasVideoCheckBox.setEnabled(false);
        hasVideoCheckBox.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        hasVideoCheckBox.setName("hasVideoCheckBox"); // NOI18N

        hasPostProcessingCheckBox.setText("has been postprocessed");
        hasPostProcessingCheckBox.setEnabled(false);
        hasPostProcessingCheckBox.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        hasPostProcessingCheckBox.setName("hasPostProcessingCheckBox"); // NOI18N

        nameValueLabel.setForeground(new java.awt.Color(0, 0, 255));
        nameValueLabel.setText("..."); // NOI18N
        nameValueLabel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, null, java.awt.Color.white, null, null));
        nameValueLabel.setName("nameValueLabel"); // NOI18N

        nameLabel.setText("Name:");
        nameLabel.setName("nameLabel"); // NOI18N

        hasSlidesCheckBox.setText("has slides");
        hasSlidesCheckBox.setEnabled(false);
        hasSlidesCheckBox.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        hasSlidesCheckBox.setName("hasSlidesCheckBox"); // NOI18N

        hasiPhonePostProcessingCheckBox.setText("has been prepared for iTunesU");
        hasiPhonePostProcessingCheckBox.setEnabled(false);
        hasiPhonePostProcessingCheckBox.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        hasiPhonePostProcessingCheckBox.setName("hasIphonePostProcessingCheckBox1"); // NOI18N

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(hasiPhonePostProcessingCheckBox)
                    .add(headerLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 178, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(titleLabel)
                    .add(titleValueLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
                    .add(nameLabel)
                    .add(nameValueLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(dateLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(dateValueLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE))
                    .add(speakerLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 74, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(speakerValueLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
                    .add(hasSlidesCheckBox)
                    .add(hasVideoCheckBox)
                    .add(hasPostProcessingCheckBox))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(headerLabel)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(titleLabel)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(titleValueLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(nameLabel)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(nameValueLabel)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(dateLabel)
                    .add(dateValueLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(speakerLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(speakerValueLabel)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(hasSlidesCheckBox)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(hasVideoCheckBox)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(hasPostProcessingCheckBox)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(hasiPhonePostProcessingCheckBox)
                .addContainerGap(40, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    
    public void update() {
        Lecture lecture=ProgramState.getInstance().getCurrentLecture();
        String lectureDateAsString="...";
        String lecturer="...";
        String dirName="...";
        String name="<html><i><font color=\"red\">Lecture not defined</html>";
        if (lecture!=null) {
           Date lectureDate=lecture.getDate();
           if (lectureDate!=null) {
               SimpleDateFormat sdfOutput =  new SimpleDateFormat ("yyyy-MM-dd" );            
               lectureDateAsString=sdfOutput.format( lectureDate );
           } 
           if (lecture.getLectureName()!=null) {
               name=lecture.getLectureName();
               lecturer=lecture.getLecturer();
           }
           if (lecture.getDirName()!=null){
               dirName=lecture.getDirName();
           }
           hasSlidesCheckBox.setSelected(lecture.hasSlides());
           hasVideoCheckBox.setSelected(lecture.hasVideo());
           hasPostProcessingCheckBox.setSelected(lecture.hasBeenPostProcessed());
           hasiPhonePostProcessingCheckBox.setSelected(lecture.hasBeenPostProcessedForItunesu()); //Antonio
        }
        titleValueLabel.setText(name);
        dateValueLabel.setText(lectureDateAsString);
        speakerValueLabel.setText(lecturer);
        nameValueLabel.setText(dirName.substring(1+dirName.lastIndexOf(File.separator)));
        this.repaint();
    }
    
    //Antonio
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel dateLabel;
    private javax.swing.JLabel dateValueLabel;
    private javax.swing.JCheckBox hasPostProcessingCheckBox;
    private javax.swing.JCheckBox hasSlidesCheckBox;
    private javax.swing.JCheckBox hasVideoCheckBox;
    private javax.swing.JCheckBox hasiPhonePostProcessingCheckBox;
    private javax.swing.JLabel headerLabel;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JLabel nameValueLabel;
    private javax.swing.JLabel speakerLabel;
    private javax.swing.JLabel speakerValueLabel;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JLabel titleValueLabel;
    // End of variables declaration//GEN-END:variables

}
